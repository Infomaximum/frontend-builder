import rspack, { type RspackOptions } from "@rspack/core";
import { WebpackError } from "webpack";

export const circularDependencyDetectorRspackConfig = {
  plugins: [
    new rspack.CircularDependencyRspackPlugin({
      exclude: /node_modules/,
      // `onStart` is called before the cycle detection starts
      onStart() {
        console.log("start detecting webpack modules cycles");
      },
      // `onDetected` is called for each module that is cyclical
      onDetected(entrypoint, modules, compilation) {
        // `paths` will be an Array of the relative module paths that make up the cycle
        // `module` will be the module record generated by webpack that caused the cycle
        compilation.errors.push(new WebpackError(modules.join(" -> ")) as any);
      },
      // `onEnd` is called before the cycle detection ends
      onEnd() {
        console.log("end detecting webpack modules cycles");
      },
    }),
  ],
} satisfies RspackOptions;
